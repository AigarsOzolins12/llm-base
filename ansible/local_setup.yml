- name: Initial local environment setup
  hosts: local
  become: yes
  vars_files:
    - ./vars/local_setup_vars.yml
  tasks:
    # - name: Create python ENV
    #   command: 
    #     chdir: ..
    #     cmd: "python -m venv ./venv"
    # - name: Active python ENV
    #   command:
    #     chdir: ..
    #     cmd: "source ./venv/bin/activate"
    - name: Create .ENV file from template
      command:
        chdir: ..
        cmd: "cp .env-template .env"
    - name: Compose up
      command: "docker compose up --build -d"
    - name: Download model
      command:
        chdir: ..
        cmd: "curl -L -o {{ base_model_save_as }} {{base_model_download_url}}"
        creates: "./ollama/external-models/{{ base_model_save_as }}"
    - name: Create external model directory in Ollama volume
      command: 
        chdir: ..
        cmd: "mkdir -p ./ollama/external-models"
        creates: "./ollama/external-models"
    - name: Move downloaded GGUF model to Ollama volume
      command:
        chdir: .. 
        cmd: "mv ./{{ base_model_save_as }} ./ollama/external-models/{{ base_model_save_as }}"
        creates: "./ollama/external-models/{{ base_model_save_as }}"
    - name: Copy modelfile to Ollama volume
      command:
        chdir: ..
        cmd: "cp ./ollama-modelfiles/{{ base_model_ollama_file }} ./ollama/external-models/{{ base_model_ollama_file }}"
        creates: "./ollama/external-models/{{ base_model_ollama_file }}"
    - name: Load downloaded model into Ollama
      community.docker.docker_container_exec:
        container: ollama
        command: /bin/bash -c "ollama create {{ model_name }} -f /root/.ollama/external-models/{{ base_model_ollama_file }}"
    - name: Install NPM packages for nextjs django frontend
      community.general.npm:
        path: ../nextjs-django-backend